// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // PS_DOC_PMT_OFF
    public class PsDocPmtOffConfiguration : IEntityTypeConfiguration<PsDocPmtOff>
    {
        public void Configure(EntityTypeBuilder<PsDocPmtOff> builder)
        {
            builder.ToTable("PS_DOC_PMT_OFF", "dbo");
            builder.HasKey(x => x.OfflineAuthCod).HasName("PK_PS_DOC_PMT_OFF").IsClustered();

            builder.Property(x => x.OfflineAuthCod).HasColumnName(@"OFFLINE_AUTH_COD").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10).ValueGeneratedNever();
            builder.Property(x => x.DocId).HasColumnName(@"DOC_ID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.OfflineTrackData).HasColumnName(@"OFFLINE_TRACK_DATA").HasColumnType("varchar(255)").IsRequired(false).IsUnicode(false).HasMaxLength(255);
            builder.Property(x => x.OfflineCrCard).HasColumnName(@"OFFLINE_CR_CARD").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.OfflineDt).HasColumnName(@"OFFLINE_DT").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.OfflineRcptAuthCod).HasColumnName(@"OFFLINE_RCPT_AUTH_COD").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.OfflineEdcProcessor).HasColumnName(@"OFFLINE_EDC_PROCESSOR").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.OfflineEntryMethod).HasColumnName(@"OFFLINE_ENTRY_METHOD").HasColumnType("varchar(2)").IsRequired(false).IsUnicode(false).HasMaxLength(2);
            builder.Property(x => x.OfflineConfigParams).HasColumnName(@"OFFLINE_CONFIG_PARAMS").HasColumnType("text(2147483647)").IsRequired(false).IsUnicode(false).HasMaxLength(2147483647);
            builder.Property(x => x.OfflineSwiped).HasColumnName(@"OFFLINE_SWIPED").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.OfflineEncryptedData).HasColumnName(@"OFFLINE_ENCRYPTED_DATA").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.OfflineCardPresent).HasColumnName(@"OFFLINE_CARD_PRESENT").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.OfflineIndustryType).HasColumnName(@"OFFLINE_INDUSTRY_TYPE").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.OfflineTransType).HasColumnName(@"OFFLINE_TRANS_TYPE").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.OfflineKsn).HasColumnName(@"OFFLINE_KSN").HasColumnType("varchar(100)").IsRequired(false).IsUnicode(false).HasMaxLength(100);
            builder.Property(x => x.OfflineTransStatus).HasColumnName(@"OFFLINE_TRANS_STATUS").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired();
        }
    }

}
// </auto-generated>
