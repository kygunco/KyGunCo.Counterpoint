// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // IM_XFER_HDR
    public class ImXferHdrConfiguration : IEntityTypeConfiguration<ImXferHdr>
    {
        public void Configure(EntityTypeBuilder<ImXferHdr> builder)
        {
            builder.ToTable("IM_XFER_HDR", "dbo");
            builder.HasKey(x => x.XferNo).HasName("PK_IM_XFER_HDR").IsClustered();

            builder.Property(x => x.XferNo).HasColumnName(@"XFER_NO").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.BatId).HasColumnName(@"BAT_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.FromLocId).HasColumnName(@"FROM_LOC_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.ToLocId).HasColumnName(@"TO_LOC_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.ShipDat).HasColumnName(@"SHIP_DAT").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.ShipBy).HasColumnName(@"SHIP_BY").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.XferOutSubTot).HasColumnName(@"XFER_OUT_SUB_TOT").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.XferOutMiscAmt).HasColumnName(@"XFER_OUT_MISC_AMT").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.Commnt1).HasColumnName(@"COMMNT_1").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Commnt2).HasColumnName(@"COMMNT_2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Commnt3).HasColumnName(@"COMMNT_3").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Ref).HasColumnName(@"REF").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.EventNo).HasColumnName(@"EVENT_NO").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.XferInSubTot).HasColumnName(@"XFER_IN_SUB_TOT").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.XferInMiscAmt).HasColumnName(@"XFER_IN_MISC_AMT").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.OpnLinCnt).HasColumnName(@"OPN_LIN_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.XferStat).HasColumnName(@"XFER_STAT").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.XferInTot).HasColumnName(@"XFER_IN_TOT").HasColumnType("decimal(16,2)").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.XferOutTot).HasColumnName(@"XFER_OUT_TOT").HasColumnType("decimal(16,2)").IsRequired(false).ValueGeneratedOnAddOrUpdate();

            // Foreign keys
            builder.HasOne(a => a.ImLoc).WithMany(b => b.ImXferHdrs).HasForeignKey(c => c.ToLocId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_IM_XFER_HDR_IM_LOC");

            builder.HasIndex(x => new { x.FromLocId, x.ToLocId, x.XferNo }).HasDatabaseName("IM_XFER_HDR_X1");
            builder.HasIndex(x => new { x.ToLocId, x.FromLocId, x.XferNo }).HasDatabaseName("IM_XFER_HDR_X2");
            builder.HasIndex(x => new { x.EventNo, x.XferNo }).HasDatabaseName("IM_XFER_HDR_X3");
            builder.HasIndex(x => new { x.ShipDat, x.XferNo }).HasDatabaseName("IM_XFER_HDR_X4");
        }
    }

}
// </auto-generated>
