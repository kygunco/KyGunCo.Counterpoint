// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // AR_CUST_CARDS
    public class ArCustCardConfiguration : IEntityTypeConfiguration<ArCustCard>
    {
        public void Configure(EntityTypeBuilder<ArCustCard> builder)
        {
            builder.ToTable("AR_CUST_CARDS", "dbo");
            builder.HasKey(x => new { x.CustNo, x.CardSeqNo }).HasName("PK_AR_CUST_CARDS").IsClustered();

            builder.Property(x => x.CustNo).HasColumnName(@"CUST_NO").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.CardSeqNo).HasColumnName(@"CARD_SEQ_NO").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.DefaultCard).HasColumnName(@"DEFAULT_CARD").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.CardDescr).HasColumnName(@"CARD_DESCR").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.PayCod).HasColumnName(@"PAY_COD").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.CardNo).HasColumnName(@"CARD_NO").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.CardNoMsk).HasColumnName(@"CARD_NO_MSK").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.CardExpDat).HasColumnName(@"CARD_EXP_DAT").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.CardNam).HasColumnName(@"CARD_NAM").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.CardNoEnc).HasColumnName(@"CARD_NO_ENC").HasColumnType("varbinary(32)").IsRequired(false).HasMaxLength(32);
            builder.Property(x => x.CardNoKid).HasColumnName(@"CARD_NO_KID").HasColumnType("tinyint").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.ArCust).WithMany(b => b.ArCustCards).HasForeignKey(c => c.CustNo).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AR_CUST_CARDS_AR_CUST");
        }
    }

}
// </auto-generated>
