// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // USER_FFLS
    public class UserFflConfiguration : IEntityTypeConfiguration<UserFfl>
    {
        public void Configure(EntityTypeBuilder<UserFfl> builder)
        {
            builder.ToTable("USER_FFLS", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_USER_FFLS").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.LicenseName).HasColumnName(@"LicenseName").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PremiseStreet).HasColumnName(@"PremiseStreet").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PremiseCity).HasColumnName(@"PremiseCity").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PremiseState).HasColumnName(@"PremiseState").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PremiseZip).HasColumnName(@"PremiseZip").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.MailingStreet).HasColumnName(@"MailingStreet").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.MailingCity).HasColumnName(@"MailingCity").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.MailingState).HasColumnName(@"MailingState").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.MailingZip).HasColumnName(@"MailingZip").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.TypeOfLicense).HasColumnName(@"TypeOfLicense").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.WebSite).HasColumnName(@"WebSite").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Ffl1).HasColumnName(@"FFL1").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Ffl2).HasColumnName(@"FFL2").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Ffl3).HasColumnName(@"FFL3").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Ffl4).HasColumnName(@"FFL4").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Ffl5).HasColumnName(@"FFL5").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Ffl6).HasColumnName(@"FFL6").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.FullFfl).HasColumnName(@"FullFFL").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.CfdNumber).HasColumnName(@"CFDNumber").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Private).HasColumnName(@"Private").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Expiration).HasColumnName(@"Expiration").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LoaIssue).HasColumnName(@"LOAIssue").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LoaExpiration).HasColumnName(@"LOAExpiration").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.PdfUrl).HasColumnName(@"PDFUrl").HasColumnType("nvarchar(max)").IsRequired(false);
        }
    }

}
// </auto-generated>
