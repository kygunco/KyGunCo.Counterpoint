// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // IM_INV
    public class ImInvConfiguration : IEntityTypeConfiguration<ImInv>
    {
        public void Configure(EntityTypeBuilder<ImInv> builder)
        {
            builder.ToTable("IM_INV", "dbo");
            builder.HasKey(x => new { x.ItemNo, x.LocId }).HasName("PK_IM_INV").IsClustered();

            builder.Property(x => x.ItemNo).HasColumnName(@"ITEM_NO").HasColumnType("varchar(20)").IsRequired().IsUnicode(false).HasMaxLength(20).ValueGeneratedNever();
            builder.Property(x => x.LocId).HasColumnName(@"LOC_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10).ValueGeneratedNever();
            builder.Property(x => x.Bin1).HasColumnName(@"BIN_1").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Bin2).HasColumnName(@"BIN_2").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Bin3).HasColumnName(@"BIN_3").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Bin4).HasColumnName(@"BIN_4").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.MinQty).HasColumnName(@"MIN_QTY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.MaxQty).HasColumnName(@"MAX_QTY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyCommit).HasColumnName(@"QTY_COMMIT").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyOnHnd).HasColumnName(@"QTY_ON_HND").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyOnPo).HasColumnName(@"QTY_ON_PO").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyOnBo).HasColumnName(@"QTY_ON_BO").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyOnXferOut).HasColumnName(@"QTY_ON_XFER_OUT").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyOnXferIn).HasColumnName(@"QTY_ON_XFER_IN").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.LstAvgCost).HasColumnName(@"LST_AVG_COST").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.LstCost).HasColumnName(@"LST_COST").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.StdCost).HasColumnName(@"STD_COST").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.CostOfSlsPct).HasColumnName(@"COST_OF_SLS_PCT").HasColumnType("decimal(9,3)").IsRequired();
            builder.Property(x => x.FstRecvDat).HasColumnName(@"FST_RECV_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstRecvDat).HasColumnName(@"LST_RECV_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.FstSalDat).HasColumnName(@"FST_SAL_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstSalDat).HasColumnName(@"LST_SAL_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstCntDat).HasColumnName(@"LST_CNT_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstOrdDat).HasColumnName(@"LST_ORD_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.NxtExpectdDat).HasColumnName(@"NXT_EXPECTD_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.NxtExpectdPo).HasColumnName(@"NXT_EXPECTD_PO").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.GlVal).HasColumnName(@"GL_VAL").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.QtyOnOrd).HasColumnName(@"QTY_ON_ORD").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyOnLwy).HasColumnName(@"QTY_ON_LWY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.QtyOnSo).HasColumnName(@"QTY_ON_SO").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.RsUtcDt).HasColumnName(@"RS_UTC_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.AvgCost).HasColumnName(@"AVG_COST").HasColumnType("decimal(15,4)").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.NetQty).HasColumnName(@"NET_QTY").HasColumnType("decimal(18,4)").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.QtyAvail).HasColumnName(@"QTY_AVAIL").HasColumnType("decimal(16,4)").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.StkStatPerQtyOnHnd).HasColumnName(@"STK_STAT_PER_QTY_ON_HND").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.StkStatPerQtyAvail).HasColumnName(@"STK_STAT_PER_QTY_AVAIL").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.StkStatPerNetQty).HasColumnName(@"STK_STAT_PER_NET_QTY").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.ReordPnt).HasColumnName(@"REORD_PNT").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.Eoq).HasColumnName(@"EOQ").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.SftyStk).HasColumnName(@"SFTY_STK").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.SrvcLevl).HasColumnName(@"SRVC_LEVL").HasColumnType("decimal(5,2)").IsRequired(false);
            builder.Property(x => x.AnnlHldCost).HasColumnName(@"ANNL_HLD_COST").HasColumnType("decimal(15,2)").IsRequired(false);
            builder.Property(x => x.AnnlHldCostPerc).HasColumnName(@"ANNL_HLD_COST_PERC").HasColumnType("decimal(15,2)").IsRequired(false);
            builder.Property(x => x.OrdCostPerOrder).HasColumnName(@"ORD_COST_PER_ORDER").HasColumnType("decimal(15,2)").IsRequired(false);
            builder.Property(x => x.EoqCalcOn).HasColumnName(@"EOQ_CALC_ON").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.RsStat).HasColumnName(@"RS_STAT").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.DropshipQtyOnCustOrd).HasColumnName(@"DROPSHIP_QTY_ON_CUST_ORD").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.DropshipQtyOnPo).HasColumnName(@"DROPSHIP_QTY_ON_PO").HasColumnType("decimal(15,4)").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.ImItem).WithMany(b => b.ImInvs).HasForeignKey(c => c.ItemNo).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_IM_INV_IM_ITEM");
            builder.HasOne(a => a.ImLoc).WithMany(b => b.ImInvs).HasForeignKey(c => c.LocId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_IM_INV_IM_LOC");

            builder.HasIndex(x => x.RsStat).HasDatabaseName("IM_INV_X_RS_STAT");
            builder.HasIndex(x => x.RsUtcDt).HasDatabaseName("IM_INV_X_RS_UTC_DT");
            builder.HasIndex(x => new { x.LocId, x.ItemNo }).HasDatabaseName("IM_INV_X1");
            builder.HasIndex(x => x.LocId).HasDatabaseName("USER_IDX_IM_INV_SALE_INFO");
        }
    }

}
// </auto-generated>
