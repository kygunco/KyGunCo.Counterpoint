// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // PS_DOC_HDR_MISC_CHRG
    public class PsDocHdrMiscChrgConfiguration : IEntityTypeConfiguration<PsDocHdrMiscChrg>
    {
        public void Configure(EntityTypeBuilder<PsDocHdrMiscChrg> builder)
        {
            builder.ToTable("PS_DOC_HDR_MISC_CHRG", "dbo");
            builder.HasKey(x => new { x.DocId, x.TotTyp, x.MiscChrgNo }).HasName("PK_PS_DOC_HDR_MISC_CHRG").IsClustered();

            builder.Property(x => x.DocId).HasColumnName(@"DOC_ID").HasColumnType("bigint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.TotTyp).HasColumnName(@"TOT_TYP").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1).ValueGeneratedNever();
            builder.Property(x => x.MiscChrgNo).HasColumnName(@"MISC_CHRG_NO").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.MiscTyp).HasColumnName(@"MISC_TYP").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.MiscAmt).HasColumnName(@"MISC_AMT").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.MiscPct).HasColumnName(@"MISC_PCT").HasColumnType("decimal(9,3)").IsRequired();
            builder.Property(x => x.MiscAmtShipped).HasColumnName(@"MISC_AMT_SHIPPED").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.MiscTaxAmtAlloc).HasColumnName(@"MISC_TAX_AMT_ALLOC").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.MiscNormTaxAmtAlloc).HasColumnName(@"MISC_NORM_TAX_AMT_ALLOC").HasColumnType("decimal(15,2)").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.PsDocHdrTot).WithMany(b => b.PsDocHdrMiscChrgs).HasForeignKey(c => new { c.DocId, c.TotTyp }).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PS_DOC_HDR_MISC_CHRG_PS_DOC_HDR_TOT");

            builder.HasIndex(x => new { x.MiscChrgNo, x.TotTyp, x.DocId }).HasDatabaseName("_dta_index_PS_DOC_HDR_MISC_CHRG_5_1806121675__K3_K2_K1_4_5_6_7");
        }
    }

}
// </auto-generated>
