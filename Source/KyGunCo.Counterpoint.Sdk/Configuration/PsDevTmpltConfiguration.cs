// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // PS_DEV_TMPLT
    public class PsDevTmpltConfiguration : IEntityTypeConfiguration<PsDevTmplt>
    {
        public void Configure(EntityTypeBuilder<PsDevTmplt> builder)
        {
            builder.ToTable("PS_DEV_TMPLT", "dbo");
            builder.HasKey(x => x.DevTmpltId).HasName("PK_PS_DEV_TMPLT").IsClustered();

            builder.Property(x => x.DevTmpltId).HasColumnName(@"DEV_TMPLT_ID").HasColumnType("bigint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Nam).HasColumnName(@"NAM").HasColumnType("varchar(40)").IsRequired().IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Descr).HasColumnName(@"DESCR").HasColumnType("varchar(250)").IsRequired(false).IsUnicode(false).HasMaxLength(250);
            builder.Property(x => x.DevTmpltTypId).HasColumnName(@"DEV_TMPLT_TYP_ID").HasColumnType("int").IsRequired();
            builder.Property(x => x.FstMaintDt).HasColumnName(@"FST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.FstMaintUsrId).HasColumnName(@"FST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.RsUtcDt).HasColumnName(@"RS_UTC_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RsStat).HasColumnName(@"RS_STAT").HasColumnType("tinyint").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.PsDevTmpltTyp).WithMany(b => b.PsDevTmplts).HasForeignKey(c => c.DevTmpltTypId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PS_DEV_TMPLT_PS_DEV_TMPLT_TYP");

            builder.HasIndex(x => x.RsStat).HasDatabaseName("PS_DEV_TMPLT_X_RS_STAT");
            builder.HasIndex(x => x.RsUtcDt).HasDatabaseName("PS_DEV_TMPLT_X_RS_UTC_DT");
            builder.HasIndex(x => new { x.DevTmpltTypId, x.DevTmpltId }).HasDatabaseName("PS_DEV_TMPLT_X1");
        }
    }

}
// </auto-generated>
