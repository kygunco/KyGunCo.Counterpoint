// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // AR_SHIP_ADRS_NOTE
    public class ArShipAdrsNoteConfiguration : IEntityTypeConfiguration<ArShipAdrsNote>
    {
        public void Configure(EntityTypeBuilder<ArShipAdrsNote> builder)
        {
            builder.ToTable("AR_SHIP_ADRS_NOTE", "dbo");
            builder.HasKey(x => new { x.CustNo, x.ShipAdrsId, x.NoteId }).HasName("PK_AR_SHIP_ADRS_NOTE").IsClustered();

            builder.Property(x => x.CustNo).HasColumnName(@"CUST_NO").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.ShipAdrsId).HasColumnName(@"SHIP_ADRS_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10).ValueGeneratedNever();
            builder.Property(x => x.NoteId).HasColumnName(@"NOTE_ID").HasColumnType("varchar(20)").IsRequired().IsUnicode(false).HasMaxLength(20).ValueGeneratedNever();
            builder.Property(x => x.NoteDat).HasColumnName(@"NOTE_DAT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.UsrId).HasColumnName(@"USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Note).HasColumnName(@"NOTE").HasColumnType("text(2147483647)").IsRequired(false).IsUnicode(false).HasMaxLength(2147483647);
            builder.Property(x => x.NoteTxt).HasColumnName(@"NOTE_TXT").HasColumnType("text(2147483647)").IsRequired(false).IsUnicode(false).HasMaxLength(2147483647);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.ArShipAdr).WithMany(b => b.ArShipAdrsNotes).HasForeignKey(c => new { c.CustNo, c.ShipAdrsId }).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AR_SHIP_ADRS_NOTE_AR_SHIP_ADRS");

            builder.HasIndex(x => new { x.CustNo, x.ShipAdrsId, x.NoteDat, x.NoteId }).HasDatabaseName("AR_SHIP_ADRS_NOTE_X1");
        }
    }

}
// </auto-generated>
