// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // PO_CUST_ORD_WRK_CELL
    public class PoCustOrdWrkCellConfiguration : IEntityTypeConfiguration<PoCustOrdWrkCell>
    {
        public void Configure(EntityTypeBuilder<PoCustOrdWrkCell> builder)
        {
            builder.ToTable("PO_CUST_ORD_WRK_CELL", "dbo");
            builder.HasKey(x => new { x.SessId, x.DocId, x.TktLinSeqNo, x.Dim1Upr, x.Dim2Upr, x.Dim3Upr }).HasName("PK_PO_CUST_ORD_WRK_CELL").IsClustered();

            builder.Property(x => x.SessId).HasColumnName(@"SESS_ID").HasColumnType("uniqueidentifier").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.StrId).HasColumnName(@"STR_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.StaId).HasColumnName(@"STA_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.TktNo).HasColumnName(@"TKT_NO").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.TktLinSeqNo).HasColumnName(@"TKT_LIN_SEQ_NO").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Dim1Upr).HasColumnName(@"DIM_1_UPR").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.Dim2Upr).HasColumnName(@"DIM_2_UPR").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.Dim3Upr).HasColumnName(@"DIM_3_UPR").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.Qty).HasColumnName(@"QTY").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnHnd).HasColumnName(@"QTY_ON_HND").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnPo).HasColumnName(@"QTY_ON_PO").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyCommit).HasColumnName(@"QTY_COMMIT").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnBo).HasColumnName(@"QTY_ON_BO").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.MinQty).HasColumnName(@"MIN_QTY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.MaxQty).HasColumnName(@"MAX_QTY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.QtyOnSo).HasColumnName(@"QTY_ON_SO").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnOrd).HasColumnName(@"QTY_ON_ORD").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnLwy).HasColumnName(@"QTY_ON_LWY").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.NetQty).HasColumnName(@"NET_QTY").HasColumnType("decimal(18,4)").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.QtyAvail).HasColumnName(@"QTY_AVAIL").HasColumnType("decimal(16,4)").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.DocId).HasColumnName(@"DOC_ID").HasColumnType("bigint").IsRequired().ValueGeneratedNever();

            // Foreign keys
            builder.HasOne(a => a.PoCustOrdWrk).WithMany(b => b.PoCustOrdWrkCells).HasForeignKey(c => new { c.SessId, c.DocId, c.TktLinSeqNo }).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PO_CUST_ORD_WRK_CELL_PO_CUST_ORD_WRK");
        }
    }

}
// </auto-generated>
