// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // DM_AGG
    public class DmAggConfiguration : IEntityTypeConfiguration<DmAgg>
    {
        public void Configure(EntityTypeBuilder<DmAgg> builder)
        {
            builder.ToTable("DM_AGG", "dbo");
            builder.HasKey(x => x.AggId).HasName("PK_DM_AGG").IsClustered();

            builder.Property(x => x.AggId).HasColumnName(@"AGG_ID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Descr).HasColumnName(@"DESCR").HasColumnType("varchar(50)").IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.ProcNam).HasColumnName(@"PROC_NAM").HasColumnType("varchar(128)").IsRequired().IsUnicode(false).HasMaxLength(128);
            builder.Property(x => x.SeqNo).HasColumnName(@"SEQ_NO").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsActive).HasColumnName(@"IS_ACTIVE").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.AggGrpId).HasColumnName(@"AGG_GRP_ID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TableName).HasColumnName(@"TABLE_NAME").HasColumnType("varchar(128)").IsRequired(false).IsUnicode(false).HasMaxLength(128);

            // Foreign keys
            builder.HasOne(a => a.DmAggGrp).WithMany(b => b.DmAggs).HasForeignKey(c => c.AggGrpId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_DM_AGG_DM_AGG_GRP");
        }
    }

}
// </auto-generated>
