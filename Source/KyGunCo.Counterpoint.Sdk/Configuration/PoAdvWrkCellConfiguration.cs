// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // PO_ADV_WRK_CELL
    public class PoAdvWrkCellConfiguration : IEntityTypeConfiguration<PoAdvWrkCell>
    {
        public void Configure(EntityTypeBuilder<PoAdvWrkCell> builder)
        {
            builder.ToTable("PO_ADV_WRK_CELL", "dbo");
            builder.HasKey(x => new { x.SessId, x.ItemNo, x.LocId, x.Dim1Upr, x.Dim2Upr, x.Dim3Upr }).HasName("PK_PO_ADV_WRK_CELL").IsClustered();

            builder.Property(x => x.SessId).HasColumnName(@"SESS_ID").HasColumnType("varchar(40)").IsRequired().IsUnicode(false).HasMaxLength(40).ValueGeneratedNever();
            builder.Property(x => x.ItemNo).HasColumnName(@"ITEM_NO").HasColumnType("varchar(20)").IsRequired().IsUnicode(false).HasMaxLength(20).ValueGeneratedNever();
            builder.Property(x => x.LocId).HasColumnName(@"LOC_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10).ValueGeneratedNever();
            builder.Property(x => x.Dim1Upr).HasColumnName(@"DIM_1_UPR").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.Dim2Upr).HasColumnName(@"DIM_2_UPR").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.Dim3Upr).HasColumnName(@"DIM_3_UPR").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.OrigSuggQty).HasColumnName(@"ORIG_SUGG_QTY").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.AdjSuggQty).HasColumnName(@"ADJ_SUGG_QTY").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtySold).HasColumnName(@"QTY_SOLD").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnHnd).HasColumnName(@"QTY_ON_HND").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnPo).HasColumnName(@"QTY_ON_PO").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnPreq).HasColumnName(@"QTY_ON_PREQ").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyCommit).HasColumnName(@"QTY_COMMIT").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnBo).HasColumnName(@"QTY_ON_BO").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.MinQty).HasColumnName(@"MIN_QTY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.MaxQty).HasColumnName(@"MAX_QTY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.NetQty).HasColumnName(@"NET_QTY").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.QtyOnSo).HasColumnName(@"QTY_ON_SO").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnOrd).HasColumnName(@"QTY_ON_ORD").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.QtyOnLwy).HasColumnName(@"QTY_ON_LWY").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.CurrDaysOfSupply).HasColumnName(@"CURR_DAYS_OF_SUPPLY").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LeadDays).HasColumnName(@"LEAD_DAYS").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.PoAdvWrk).WithMany(b => b.PoAdvWrkCells).HasForeignKey(c => new { c.SessId, c.ItemNo, c.LocId }).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PO_ADV_WRK_CELL_PO_ADV_WRK");
        }
    }

}
// </auto-generated>
