// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // IM_LOC
    public class ImLocConfiguration : IEntityTypeConfiguration<ImLoc>
    {
        public void Configure(EntityTypeBuilder<ImLoc> builder)
        {
            builder.ToTable("IM_LOC", "dbo");
            builder.HasKey(x => x.LocId).HasName("PK_IM_LOC").IsClustered();

            builder.Property(x => x.LocId).HasColumnName(@"LOC_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10).ValueGeneratedNever();
            builder.Property(x => x.Descr).HasColumnName(@"DESCR").HasColumnType("varchar(30)").IsRequired().IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.DescrUpr).HasColumnName(@"DESCR_UPR").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.Adrs1).HasColumnName(@"ADRS_1").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Adrs2).HasColumnName(@"ADRS_2").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Adrs3).HasColumnName(@"ADRS_3").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.City).HasColumnName(@"CITY").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.State).HasColumnName(@"STATE").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.ZipCod).HasColumnName(@"ZIP_COD").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.Cntry).HasColumnName(@"CNTRY").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.Phone1).HasColumnName(@"PHONE_1").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.Phone2).HasColumnName(@"PHONE_2").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.Fax1).HasColumnName(@"FAX_1").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.Fax2).HasColumnName(@"FAX_2").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.Contct1).HasColumnName(@"CONTCT_1").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Contct2).HasColumnName(@"CONTCT_2").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.EmailAdrs1).HasColumnName(@"EMAIL_ADRS_1").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.EmailAdrs2).HasColumnName(@"EMAIL_ADRS_2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Url1).HasColumnName(@"URL_1").HasColumnType("varchar(100)").IsRequired(false).IsUnicode(false).HasMaxLength(100);
            builder.Property(x => x.Url2).HasColumnName(@"URL_2").HasColumnType("varchar(100)").IsRequired(false).IsUnicode(false).HasMaxLength(100);
            builder.Property(x => x.PftCtr).HasColumnName(@"PFT_CTR").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.RsUtcDt).HasColumnName(@"RS_UTC_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.AnnlHldCostPerc).HasColumnName(@"ANNL_HLD_COST_PERC").HasColumnType("decimal(15,2)").IsRequired(false);
            builder.Property(x => x.ForcUseXferIn).HasColumnName(@"FORC_USE_XFER_IN").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.RsStat).HasColumnName(@"RS_STAT").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.UserFfl).HasColumnName(@"USER_FFL").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.TaxIdNo).HasColumnName(@"TAX_ID_NO").HasColumnType("varchar(30)").IsRequired(false).IsUnicode(false).HasMaxLength(30);
            builder.Property(x => x.DfltPoTaxCod).HasColumnName(@"DFLT_PO_TAX_COD").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.DfltPoTaxCodMeth).HasColumnName(@"DFLT_PO_TAX_COD_METH").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.UserFflDisabled).HasColumnName(@"USER_FFL_DISABLED").HasColumnType("varchar(1)").IsRequired(false).IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.UserSiteId).HasColumnName(@"USER_SITE_ID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UserNyspCodeNo).HasColumnName(@"USER_NYSP_CODE_NO").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);

            // Foreign keys
            builder.HasOne(a => a.ArTaxCod).WithMany(b => b.ImLocs).HasForeignKey(c => c.DfltPoTaxCod).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_IM_LOC_AR_TAX_COD");

            builder.HasIndex(x => x.RsStat).HasDatabaseName("IM_LOC_X_RS_STAT");
            builder.HasIndex(x => x.RsUtcDt).HasDatabaseName("IM_LOC_X_RS_UTC_DT");
            builder.HasIndex(x => new { x.DescrUpr, x.LocId }).HasDatabaseName("IM_LOC_X1");
        }
    }

}
// </auto-generated>
