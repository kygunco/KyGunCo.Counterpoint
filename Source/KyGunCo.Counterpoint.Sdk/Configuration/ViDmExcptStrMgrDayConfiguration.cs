// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // VI_DM_EXCPT_STR_MGR_DAY
    public class ViDmExcptStrMgrDayConfiguration : IEntityTypeConfiguration<ViDmExcptStrMgrDay>
    {
        public void Configure(EntityTypeBuilder<ViDmExcptStrMgrDay> builder)
        {
            builder.ToView("VI_DM_EXCPT_STR_MGR_DAY", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.UsrId).HasColumnName(@"USR_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.StrId).HasColumnName(@"STR_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.BusDat).HasColumnName(@"BUS_DAT").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.TktCnt).HasColumnName(@"TKT_CNT").HasColumnType("int").IsRequired();
            builder.Property(x => x.TktAmt).HasColumnName(@"TKT_AMT").HasColumnType("int").IsRequired();
            builder.Property(x => x.LinCnt).HasColumnName(@"LIN_CNT").HasColumnType("int").IsRequired();
            builder.Property(x => x.OvrShrt).HasColumnName(@"OVR_SHRT").HasColumnType("int").IsRequired();
            builder.Property(x => x.HoursWrkd).HasColumnName(@"HOURS_WRKD").HasColumnType("int").IsRequired();
            builder.Property(x => x.CurrTktVoidCnt).HasColumnName(@"CURR_TKT_VOID_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CurrTktVoidAmt).HasColumnName(@"CURR_TKT_VOID_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.ComplTktVoidCnt).HasColumnName(@"COMPL_TKT_VOID_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ComplTktVoidAmt).HasColumnName(@"COMPL_TKT_VOID_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.DocEditCnt).HasColumnName(@"DOC_EDIT_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DocEditAmt).HasColumnName(@"DOC_EDIT_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.DocTaxCategChngCnt).HasColumnName(@"DOC_TAX_CATEG_CHNG_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DocTaxAmtChngCnt).HasColumnName(@"DOC_TAX_AMT_CHNG_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DocTaxAmtChngAmt).HasColumnName(@"DOC_TAX_AMT_CHNG_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.DocDiscChngCnt).HasColumnName(@"DOC_DISC_CHNG_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DocDiscChngAmt).HasColumnName(@"DOC_DISC_CHNG_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.PayInCnt).HasColumnName(@"PAY_IN_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PayInAmt).HasColumnName(@"PAY_IN_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.PayOutCnt).HasColumnName(@"PAY_OUT_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PayOutAmt).HasColumnName(@"PAY_OUT_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.PayOnAcctCnt).HasColumnName(@"PAY_ON_ACCT_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PayOnAcctAmt).HasColumnName(@"PAY_ON_ACCT_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.CashDropCnt).HasColumnName(@"CASH_DROP_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CashDropAmt).HasColumnName(@"CASH_DROP_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.CashLoanCnt).HasColumnName(@"CASH_LOAN_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CashLoanAmt).HasColumnName(@"CASH_LOAN_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.NoSalCnt).HasColumnName(@"NO_SAL_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LinTaxStatChngCnt).HasColumnName(@"LIN_TAX_STAT_CHNG_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LinTaxStatChngAmt).HasColumnName(@"LIN_TAX_STAT_CHNG_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.LinTaxCategChngCnt).HasColumnName(@"LIN_TAX_CATEG_CHNG_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LinPrcChngCnt).HasColumnName(@"LIN_PRC_CHNG_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LinPrcChngAmt).HasColumnName(@"LIN_PRC_CHNG_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.RtnLinCnt).HasColumnName(@"RTN_LIN_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RtnLinAmt).HasColumnName(@"RTN_LIN_AMT").HasColumnType("money").IsRequired(false);
            builder.Property(x => x.ManCreditAuthCnt).HasColumnName(@"MAN_CREDIT_AUTH_CNT").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ManCreditAuthAmt).HasColumnName(@"MAN_CREDIT_AUTH_AMT").HasColumnType("money").IsRequired(false);
        }
    }

}
// </auto-generated>
