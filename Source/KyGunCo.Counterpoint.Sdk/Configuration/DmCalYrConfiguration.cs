// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // DM_CAL_YR
    public class DmCalYrConfiguration : IEntityTypeConfiguration<DmCalYr>
    {
        public void Configure(EntityTypeBuilder<DmCalYr> builder)
        {
            builder.ToTable("DM_CAL_YR", "dbo");
            builder.HasKey(x => x.YrId).HasName("PK_DM_CAL_YR").IsClustered();

            builder.Property(x => x.YrId).HasColumnName(@"YR_ID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.BegDat).HasColumnName(@"BEG_DAT").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.EndDat).HasColumnName(@"END_DAT").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.NxtYrId).HasColumnName(@"NXT_YR_ID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PrevYrId).HasColumnName(@"PREV_YR_ID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CalndrId).HasColumnName(@"CALNDR_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false).ValueGeneratedOnAddOrUpdate();

            // Foreign keys
            builder.HasOne(a => a.SyCalndr).WithMany(b => b.DmCalYrs).HasForeignKey(c => c.CalndrId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_DM_CAL_YR_SY_CALNDR");
        }
    }

}
// </auto-generated>
