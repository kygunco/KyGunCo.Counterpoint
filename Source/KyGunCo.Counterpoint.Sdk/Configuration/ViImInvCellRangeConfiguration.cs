// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // VI_IM_INV_CELL_RANGE
    public class ViImInvCellRangeConfiguration : IEntityTypeConfiguration<ViImInvCellRange>
    {
        public void Configure(EntityTypeBuilder<ViImInvCellRange> builder)
        {
            builder.ToView("VI_IM_INV_CELL_RANGE", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.ItemNo).HasColumnName(@"ITEM_NO").HasColumnType("varchar(20)").IsRequired().IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.LocId).HasColumnName(@"LOC_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.MinCellQtyOnHnd).HasColumnName(@"MinCellQtyOnHnd").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.MaxCellQtyOnHnd).HasColumnName(@"MaxCellQtyOnHnd").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.CellsAtZero).HasColumnName(@"CellsAtZero").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CellsAboveZero).HasColumnName(@"CellsAboveZero").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CellsBelowZero).HasColumnName(@"CellsBelowZero").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CellsBelowMin).HasColumnName(@"CellsBelowMin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CellsAboveMax).HasColumnName(@"CellsAboveMax").HasColumnType("int").IsRequired(false);
        }
    }

}
// </auto-generated>
