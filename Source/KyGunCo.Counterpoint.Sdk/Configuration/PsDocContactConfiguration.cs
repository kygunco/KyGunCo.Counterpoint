// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // PS_DOC_CONTACT
    public class PsDocContactConfiguration : IEntityTypeConfiguration<PsDocContact>
    {
        public void Configure(EntityTypeBuilder<PsDocContact> builder)
        {
            builder.ToTable("PS_DOC_CONTACT", "dbo");
            builder.HasKey(x => new { x.DocId, x.ContactId }).HasName("PK_PS_DOC_CONTACT").IsClustered();

            builder.Property(x => x.DocId).HasColumnName(@"DOC_ID").HasColumnType("bigint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.ContactId).HasColumnName(@"CONTACT_ID").HasColumnType("tinyint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Nam).HasColumnName(@"NAM").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.FstNam).HasColumnName(@"FST_NAM").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.LstNam).HasColumnName(@"LST_NAM").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.Salutation).HasColumnName(@"SALUTATION").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Adrs1).HasColumnName(@"ADRS_1").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Adrs2).HasColumnName(@"ADRS_2").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Adrs3).HasColumnName(@"ADRS_3").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.City).HasColumnName(@"CITY").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.State).HasColumnName(@"STATE").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.ZipCod).HasColumnName(@"ZIP_COD").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.Cntry).HasColumnName(@"CNTRY").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.Phone1).HasColumnName(@"PHONE_1").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.Phone2).HasColumnName(@"PHONE_2").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.AdrsId).HasColumnName(@"ADRS_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.NamTyp).HasColumnName(@"NAM_TYP").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.EmailAdrs1).HasColumnName(@"EMAIL_ADRS_1").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.EmailAdrs2).HasColumnName(@"EMAIL_ADRS_2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Contct1).HasColumnName(@"CONTCT_1").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Contct2).HasColumnName(@"CONTCT_2").HasColumnType("varchar(40)").IsRequired(false).IsUnicode(false).HasMaxLength(40);
            builder.Property(x => x.Fax1).HasColumnName(@"FAX_1").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);
            builder.Property(x => x.Fax2).HasColumnName(@"FAX_2").HasColumnType("varchar(25)").IsRequired(false).IsUnicode(false).HasMaxLength(25);

            // Foreign keys
            builder.HasOne(a => a.PsDocHdr).WithMany(b => b.PsDocContacts).HasForeignKey(c => c.DocId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PS_DOC_CONTACT_PS_DOC_HDR");

            builder.HasIndex(x => new { x.DocId, x.ContactId }).HasDatabaseName("_dta_index_PS_DOC_CONTACT_5_1214119566__K1_K2_3_4_5_6_7_8_9_10_11_12_13_14_15_16_17_18_19_20_21_22_23");
            builder.HasIndex(x => new { x.DocId, x.ContactId }).HasDatabaseName("_dta_index_PS_DOC_CONTACT_5_1214119566__K1_K2_3_4_5_6_7_8_9_10_11_12_13_14_15_17_18_19_20_21_22_23");
            builder.HasIndex(x => new { x.LstNam, x.FstNam }).HasDatabaseName("PS_DOC_CONTACT_X1");
            builder.HasIndex(x => x.Nam).HasDatabaseName("PS_DOC_CONTACT_X2");
        }
    }

}
// </auto-generated>
