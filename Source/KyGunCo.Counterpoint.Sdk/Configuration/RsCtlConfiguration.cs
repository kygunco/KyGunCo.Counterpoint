// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // RS_CTL
    public class RsCtlConfiguration : IEntityTypeConfiguration<RsCtl>
    {
        public void Configure(EntityTypeBuilder<RsCtl> builder)
        {
            builder.ToTable("RS_CTL", "dbo");
            builder.HasKey(x => x.KeyId).HasName("PK_RS_CTL").IsClustered();

            builder.Property(x => x.KeyId).HasColumnName(@"KEY_ID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.StrId).HasColumnName(@"STR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.StaId).HasColumnName(@"STA_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.IsSiteServer).HasColumnName(@"IS_SITE_SERVER").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ParentServNam).HasColumnName(@"PARENT_SERV_NAM").HasColumnType("varchar(128)").IsRequired(false).IsUnicode(false).HasMaxLength(128);
            builder.Property(x => x.ExtractionFreqSecs).HasColumnName(@"EXTRACTION_FREQ_SECS").HasColumnType("int").IsRequired();
            builder.Property(x => x.ExtractionEnabled).HasColumnName(@"EXTRACTION_ENABLED").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.LastExtractionDt).HasColumnName(@"LAST_EXTRACTION_DT").HasColumnType("datetime").IsRequired(false);
        }
    }

}
// </auto-generated>
