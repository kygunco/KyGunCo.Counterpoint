// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // IM_XFER_RECON_LIN
    public class ImXferReconLinConfiguration : IEntityTypeConfiguration<ImXferReconLin>
    {
        public void Configure(EntityTypeBuilder<ImXferReconLin> builder)
        {
            builder.ToTable("IM_XFER_RECON_LIN", "dbo");
            builder.HasKey(x => new { x.XferNo, x.XferLinSeqNo }).HasName("PK_IM_XFER_RECON_LIN").IsClustered();

            builder.Property(x => x.XferNo).HasColumnName(@"XFER_NO").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.XferLinSeqNo).HasColumnName(@"XFER_LIN_SEQ_NO").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.ItemNo).HasColumnName(@"ITEM_NO").HasColumnType("varchar(20)").IsRequired().IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.XferQty).HasColumnName(@"XFER_QTY").HasColumnType("decimal(15,4)").IsRequired();
            builder.Property(x => x.XferUnit).HasColumnName(@"XFER_UNIT").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.XferQtyUnit).HasColumnName(@"XFER_QTY_UNIT").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.XferQtyNumer).HasColumnName(@"XFER_QTY_NUMER").HasColumnType("decimal(11,0)").IsRequired();
            builder.Property(x => x.XferQtyDenom).HasColumnName(@"XFER_QTY_DENOM").HasColumnType("decimal(11,0)").IsRequired();
            builder.Property(x => x.QtyRecvd).HasColumnName(@"QTY_RECVD").HasColumnType("decimal(15,4)").IsRequired(false);
            builder.Property(x => x.ReconMeth).HasColumnName(@"RECON_METH").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.Commnt1).HasColumnName(@"COMMNT_1").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Commnt2).HasColumnName(@"COMMNT_2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Commnt3).HasColumnName(@"COMMNT_3").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.CellDescr).HasColumnName(@"CELL_DESCR").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.IsSingleCell).HasColumnName(@"IS_SINGLE_CELL").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
            builder.Property(x => x.Dim1Upr).HasColumnName(@"DIM_1_UPR").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.Dim2Upr).HasColumnName(@"DIM_2_UPR").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.Dim3Upr).HasColumnName(@"DIM_3_UPR").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.NoOfSersRecon).HasColumnName(@"NO_OF_SERS_RECON").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QtyVariance).HasColumnName(@"QTY_VARIANCE").HasColumnType("decimal(16,4)").IsRequired(false).ValueGeneratedOnAddOrUpdate();

            // Foreign keys
            builder.HasOne(a => a.ImXferReconHdr).WithMany(b => b.ImXferReconLins).HasForeignKey(c => c.XferNo).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_IM_XFER_RECON_LIN_IM_XFER_RECON_HDR");

            builder.HasIndex(x => new { x.ItemNo, x.XferNo, x.XferLinSeqNo }).HasDatabaseName("IM_XFER_RECON_LIN_X1");
        }
    }

}
// </auto-generated>
