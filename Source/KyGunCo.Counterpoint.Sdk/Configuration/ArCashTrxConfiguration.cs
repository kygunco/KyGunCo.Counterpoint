// <auto-generated>

using KyGunCo.Counterpoint.Sdk.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace KyGunCo.Counterpoint.Sdk.Configuration
{
    // AR_CASH_TRX
    public class ArCashTrxConfiguration : IEntityTypeConfiguration<ArCashTrx>
    {
        public void Configure(EntityTypeBuilder<ArCashTrx> builder)
        {
            builder.ToTable("AR_CASH_TRX", "dbo");
            builder.HasKey(x => new { x.CustNo, x.DocNo }).HasName("PK_AR_CASH_TRX").IsClustered();

            builder.Property(x => x.CustNo).HasColumnName(@"CUST_NO").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.DocNo).HasColumnName(@"DOC_NO").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15).ValueGeneratedNever();
            builder.Property(x => x.BatId).HasColumnName(@"BAT_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.EntrySeqNo).HasColumnName(@"ENTRY_SEQ_NO").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PayCod).HasColumnName(@"PAY_COD").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.TrxDat).HasColumnName(@"TRX_DAT").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.Amt).HasColumnName(@"AMT").HasColumnType("decimal(15,2)").IsRequired();
            builder.Property(x => x.DiscTaken).HasColumnName(@"DISC_TAKEN").HasColumnType("decimal(15,2)").IsRequired(false);
            builder.Property(x => x.TotWrtoffAmt).HasColumnName(@"TOT_WRTOFF_AMT").HasColumnType("decimal(15,2)").IsRequired(false);
            builder.Property(x => x.StrId).HasColumnName(@"STR_ID").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Ref).HasColumnName(@"REF").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.ErrRef).HasColumnName(@"ERR_REF").HasColumnType("varchar(255)").IsRequired(false).IsUnicode(false).HasMaxLength(255);
            builder.Property(x => x.LstMaintDt).HasColumnName(@"LST_MAINT_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LstMaintUsrId).HasColumnName(@"LST_MAINT_USR_ID").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.LstLckDt).HasColumnName(@"LST_LCK_DT").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RowTs).HasColumnName(@"ROW_TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.RvrslOfEventNo).HasColumnName(@"RVRSL_OF_EVENT_NO").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.RvrslOfDocNo).HasColumnName(@"RVRSL_OF_DOC_NO").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);

            // Foreign keys
            builder.HasOne(a => a.ArCust).WithMany(b => b.ArCashTrxes).HasForeignKey(c => c.CustNo).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AR_CASH_TRX_AR_CUST");

            builder.HasIndex(x => new { x.BatId, x.EntrySeqNo, x.CustNo, x.DocNo }).HasDatabaseName("AR_CASH_TRX_X1");
        }
    }

}
// </auto-generated>
