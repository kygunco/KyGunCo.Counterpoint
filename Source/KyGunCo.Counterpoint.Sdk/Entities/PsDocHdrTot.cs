// <auto-generated>

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace KyGunCo.Counterpoint.Sdk.Entities
{
    // PS_DOC_HDR_TOT
    public class PsDocHdrTot
    {
        public long DocId { get; set; } // DOC_ID (Primary key)
        public string TotTyp { get; set; } // TOT_TYP (Primary key) (length: 1)
        public decimal InitialMinDue { get; set; } // INITIAL_MIN_DUE
        public string HasTaxOvrd { get; set; } = "!"; // HAS_TAX_OVRD (length: 1)
        public decimal TaxAmtShipped { get; set; } // TAX_AMT_SHIPPED
        public int? Lins { get; set; } = 0; // LINS
        public decimal? TotGfcAmt { get; set; } // TOT_GFC_AMT
        public decimal? TotSvcAmt { get; set; } // TOT_SVC_AMT
        public decimal SubTot { get; set; } = 0m; // SUB_TOT
        public int TaxOvrdLins { get; set; } = 0; // TAX_OVRD_LINS
        public decimal? TotExtCost { get; set; } // TOT_EXT_COST
        public decimal TotMisc { get; set; } = 0m; // TOT_MISC
        public decimal TaxAmt { get; set; } // TAX_AMT
        public decimal NormTaxAmt { get; set; } = 0m; // NORM_TAX_AMT
        public decimal TotTnd { get; set; } = 0m; // TOT_TND
        public decimal TotChng { get; set; } = 0m; // TOT_CHNG
        public decimal TotWeight { get; set; } // TOT_WEIGHT
        public decimal TotCube { get; set; } // TOT_CUBE
        public decimal Tot { get; set; } = 0m; // TOT
        public decimal AmtDue { get; set; } = 0m; // AMT_DUE
        public decimal TotHdrDisc { get; set; } // TOT_HDR_DISC
        public decimal TotLinDisc { get; set; } // TOT_LIN_DISC
        public decimal TotHdrDiscntblAmt { get; set; } = 0m; // TOT_HDR_DISCNTBL_AMT
        public decimal TotTipAmt { get; set; } = 0m; // TOT_TIP_AMT

        // Reverse navigation

        /// <summary>
        /// Child PsDocHdrMiscChrgs where [PS_DOC_HDR_MISC_CHRG].([DOC_ID], [TOT_TYP]) point to this entity (FK_PS_DOC_HDR_MISC_CHRG_PS_DOC_HDR_TOT)
        /// </summary>
        public virtual IList<PsDocHdrMiscChrg> PsDocHdrMiscChrgs { get; set; } = new List<PsDocHdrMiscChrg>(); // PS_DOC_HDR_MISC_CHRG.FK_PS_DOC_HDR_MISC_CHRG_PS_DOC_HDR_TOT

        // Foreign keys

        /// <summary>
        /// Parent PsDocHdr pointed by [PS_DOC_HDR_TOT].([DocId]) (FK_PS_DOC_HDR_TOT_PS_DOC_HDR)
        /// </summary>
        public virtual PsDocHdr PsDocHdr { get; set; } // FK_PS_DOC_HDR_TOT_PS_DOC_HDR
    }

}
// </auto-generated>
